name: Docker Image CI

on:
  push:
    branches: 
    - master 

  pull_request:
    branches: 
    - master 

  schedule:
  - cron: "0 2 * * 1-5"
  
  workflow_dispatch:
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        sudo apt install coreutils util-linux xz-utils hub
        mkdir -p ~/.docker
        sudo service docker restart
        docker build --squash --file Dockerfile --tag mygentoo:release-master .
        docker save -o mygentoo-release-master.tar mygentoo:release-master
        sudo xz -9 mygentoo-release-master.tar
        echo "b2sum: $(b2sum mygentoo-release-master.tar.xz)" > checksums.txt
        echo "sha512sum: $(sha512sum mygentoo-release-master.tar.xz)" >> checksums.txt
                      
    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true # default: false
        tag_name: release-master # tag name to delete
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Assets
      run: |
        set -x
        assets=()
        tag_name="release-master"
        for asset in checksums.txt mygentoo-${tag_name}.tar.xz; do
        assets+=("-a" "$asset")
        done
        hub release create  "${assets[@]}" \
        -m "Release $tag_name" \
        -m "This release was automatically created by the Git Actions workflow corresponding to directory .github in the repository." \
        -m "The output are a checksum file and a compressed Docker image for the corresponding branch." \
        -m "File **mygentoo-${tag_name}.tar.xz** is the compressed custom MKG Docker image built from latest official stage3 and portage archives." \
        -m "To create an updated Gentoo distribution, start a Docker image as indicated in the README." \
        -m "Alternatively, you can create an install ISO by running:" \
        -m "    # mkg dockerize gentoo.iso [burn]"  \
        -m "You can then use this ISO image to install Gentoo onto any adequate device." \
        "$tag_name"
      env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
